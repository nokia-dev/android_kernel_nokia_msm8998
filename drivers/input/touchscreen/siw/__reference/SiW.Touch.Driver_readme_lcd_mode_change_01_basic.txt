[Last updated : 2016.12.10]

###################################################################################################
# Preview                                                                                         #
###################################################################################################

The SiW AIT touch module basically consists of display and touch block
and these two parts area related to each other for mode mngt.
So, display driver and touch driver shall be connected and
touch driver supports notifer chain for this mode control

Rule 1. The display mode setup shall precede touch mode setup
Rule 2. The mode status of two drivers shall be synchronized with each other


###################################################################################################
# Definitions                                                                                     #
###################################################################################################

enum {
	LCD_MODE_U0 = 0,
	LCD_MODE_U2_UNBLANK,
	LCD_MODE_U2,
	LCD_MODE_U3,
	LCD_MODE_U3_PARTIAL,
	LCD_MODE_U3_QUICKCOVER,
	LCD_MODE_STOP,
	LCD_MODE_MAX,
};

###################################################################################################
# Base                                                                                            #
###################################################################################################
* default sysfs path
  general : /sys/devices/virtual/input/siw_touch_input/
  watch   : /sys/devices/virtual/input/siw_ext_watch/

* To use notifier call chain of touch driver in LCD driver,
  (1) Copy the siw_touch_notify.h([SiW driver source]/include/linux/input/siw_touch_notify.h)
      to [Kernel Top]/include/linux/input/ folder
  (2) Use this include in your LCD driver
      #include <linux/input/siw_touch_notify.h>

###################################################################################################
# Procedure - Default                                                                             #
###################################################################################################
[Initial default : U3 mode]
* In system booting, display probe shall precede touch probe

Step-1. Initialize display mode (U3)

Step-2. Initialize touch mode (U3)

        <Log example>
        ...
        [...] siw_touch spi5.0: current driving mode is U3
        [...] siw_touch spi5.0: DDI Display Mode[0021h] = 0x00000003
        [...] siw_touch spi5.0: TC Driving[0C03h] wr 0x00000185
        [...] siw_touch spi5.0: lpwg resume(1, 0): lcd_mode 3, driving_mode 3
        ...

* LPWG area set
        In android framework, set lpwg active area via lpwg_notify sysfs attr
        : echo 3 0 0 720 1280 > /sys/devices/virtual/input/siw_touch_input/lpwg_notify
               | | |  |   y2
               | | |  y1
               | | x2
               | x1
               code : 3 = LPWG_ACTIVE_AREA

        <Log example>
        ...
        [...] siw_touch spi5.0: LPWG_ACTIVE_AREA: x1[0], y1[720], x2[0], y2[1280]
        ...

###################################################################################################
# Procedure - U3 <-> U0                                                                           #
###################################################################################################
[Change to display off mode : U3 -> U0]

Step-1. In android framework, set lpwg mode via lpwg_notify sysfs attr
        : echo 9 1 0 1 0 > /sys/devices/virtual/input/siw_touch_input/lpwg_notify
               | | | | qcover
               | | | sensor
               | | screen
               | mode : 1 = (LPWG_DOUBLE_TAP)
               code : 9 = LPWG_UPDATE_ALL

        <Log example>
        ...
        [...] siw_touch spi5.0: LPWG_UPDATE_ALL: mode[1], screen[OFF], sensor[FAR], qcover[OPEN]
        [...] siw_touch spi5.0: lpwg resume: mode 1, screen 0
        [...] siw_touch spi1.0: lpwg resume: partial
        [...] siw_touch spi1.0: TCI1-type:4
        [...] siw_touch spi1.0: lpwg_control mode = 1
        [...] siw_touch spi1.0: current driving mode is U3_PARTIAL
        [...] siw_touch spi1.0: DDI Display Mode[0021h] = 0x00000003
        [...] siw_touch spi1.0: TC Driving[0C03h] wr 0x00000385
        [...] siw_touch spi1.0: glove_en: OFF(00000000h)
        [...] siw_touch spi1.0: grab_en: OFF(00000000h)
        [...] siw_touch spi1.0: lpwg resume(1, 0): lcd_mode 3, driving_mode 4
        ...

Step-2. Set display mode to U0 in LCD driver

Step-3. Change lcd_mode
        [via notifier]
        In LCD driver, Send U0 mode event to touch driver via notifier function
        : int panel_mode = LCD_EVENT_LCD_MODE_U0;
          siw_touch_notifier_call_chain(LCD_EVENT_LCD_MODE, (void *)&panel_mode) --> siw_hal_notify
        [via sysfs]
        In android framework,
        : echo 0 > /sys/devices/virtual/input/siw_touch_input/lcd_mode

        <Log example>
        ...
        [...] siw_touch spi1.0: notify: lcd_event: lcd mode
        [...] siw_touch spi1.0: lcd_mode: 0 (prev: 3)
        [...] siw_touch spi1.0: U0 mode change
        ...
        [...] siw_touch spi1.0: touch core pm suspend start
        [...] siw_touch spi1.0: lpwg suspend: mode 1, screen 0
        [...] siw_touch spi1.0: TCI1-type:4
        [...] siw_touch spi1.0: lpwg_control mode = 1
        [...] siw_touch spi1.0: current driving mode is U0
        [...] siw_touch spi1.0: DDI Display Mode[0021h] = 0x00000000
        [...] siw_touch spi1.0: TC Driving[0C03h] wr 0x00000001
        ...
        [...] siw_touch spi1.0: command done: mode 0, running_sts 01h
        ...
        [...] siw_touch spi1.0: lpwg suspend(1, 0): lcd_mode 0, driving_mode 0
        [...] siw_touch spi1.0: touch core pm suspend end(0)
        [...] siw_touch spi1.0: [1] TC Driving OK
        ...

---------------------------------------------------------------------------------------------------
[Change to display on mode : U0 -> U3]

Step-1. In android framework, set lpwg mode via lpwg_notify sysfs attr
        : echo 9 0 1 1 0 > /sys/devices/virtual/input/siw_touch_input/lpwg_notify

        <Log example>
        ...
        [...] siw_touch spi1.0: LPWG_UPDATE_ALL: mode[0], screen[ON], sensor[FAR], qcover[OPEN]
        [...] siw_touch spi1.0: lpwg suspend: mode 0, screen 1
        [...] siw_touch spi1.0: sleep state -> IC_NORMAL
        [...] siw_touch spi1.0: lpwg suspend(0, 0): lcd_mode 0, driving_mode 0
        ...

Step-2. Set RESET notifier (ready for reset)
        (1) This RESET notifier tells touch side that nReset or Power re-init will happen.
            So, this shall be done before nReset or power sequence of LCD
        (2) This is required only when the mode changes from U0 to another.
            Don't use this on initial power-on sequence of system booting.
        [via notifier]
        In LCD driver, send RESET event
        : siw_touch_notifier_call_chain(LCD_EVENT_HW_RESET, NULL) --> siw_hal_notify
        [via sysfs]
        In android framework,
        : echo 0x5A 0x13 0 > /sys/devices/virtual/input/siw_touch_input/dbg_notify

        <Log example>
        ...
        [...] siw_touch spi1.0: notify: reset
        [...] siw_touch spi1.0: irq(512) wake disabled
        [...] siw_touch spi1.0: irq(512) disabled
        ...

Step-3. Set display mode to U3 in LCD driver (including nReset or power sequence)

Step-4. Change lcd_mode
        [via notifier]
        In LCD driver, send U3 mode event to touch driver via notifier function
        : int panel_mode = LCD_EVENT_LCD_MODE_U3;
          siw_touch_notifier_call_chain(LCD_EVENT_LCD_MODE, (void *)&panel_mode) --> siw_hal_notify
        [via sysfs]
        In android framework,
        : echo 3 > /sys/devices/virtual/input/siw_touch_input/lcd_mode

        <Log example>
        ...
        [...] siw_touch spi1.0: notify: lcd_event: lcd mode
        [...] siw_touch spi1.0: lcd_mode: 3 (prev: 0)
        [...] siw_touch spi1.0: U3 mode change
        ...
        [...] siw_touch spi1.0: touch core pm resume start
        [...] siw_touch spi1.0: touch core pm resume end(0)
        //siw_touch_resume -> init_work
        [...] siw_touch spi1.0: [T] chip id 4947, version v0.03 (0x04090003h, 0xFF)
        [...] siw_touch spi1.0: [T] product id HTC57TMP, flash boot idle(done), crc ok (0x00000044)
        [...] siw_touch spi1.0: [SW49407] IC info is good: 9, 4
        [...] siw_touch spi1.0: lpwg resume: mode 0, screen 1
        [...] siw_touch spi1.0: lpwg resume: screen
        [...] siw_touch spi1.0: lpwg_control mode = 0
        [...] siw_touch spi1.0: current driving mode is U3
        [...] siw_touch spi1.0: DDI Display Mode[0021h] = 0x00000003
        [...] siw_touch spi1.0: TC Driving[0C03h] wr 0x00000185
        [...] siw_touch spi1.0: command done: mode 3, running_sts 04h
        ...
        [...] siw_touch spi1.0: lpwg resume(1, 0): lcd_mode 3, driving_mode 3
        ...
        [...] siw_touch spi1.0: SW49407 init done
        ...
        [...] siw_touch spi1.0: clr IRQS_PENDING(512)
        [...] siw_touch spi1.0: irq(512) enabled
        [...] siw_touch spi1.0: irq(512) wake enabled

---------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------



